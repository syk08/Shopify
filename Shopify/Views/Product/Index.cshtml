@model IEnumerable<ECommerce_Project.Models.Products>

@{
    ViewBag.Title = "Index";
}
<div class="mt-3" style="display:flex; ">
    <p class="me-2 ">
        @Html.ActionLink("Create New", "AddProduct", null, new { @class = "btn btn-outline-primary" })
    </p>
    <p>
        @Html.ActionLink("🔙 Back to Admin", "AdminDashboard", "Home", null, new { @class = "btn btn-outline-success" })
    </p>
</div>
@using (Html.BeginForm("Index", "Product", FormMethod.Get))
{
    <b>Searched By: </b>@Html.RadioButton("SearchedBy", "ProductName", true) <text>ProductName</text>
    @Html.RadioButton("SearchedBy", "Category") <text>Category</text>

    @Html.TextBox("Search")
    <input type="submit" value="Search" class="btn-dark" />

}


<hr />
<h2 class="text-center">PRODUCTS LIST </h2>
<hr />
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProductId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductName)
        </th>
        <th>
            Product Image
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Brand)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            Operations
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                <img src="@Url.Content(item.ProductImage)" height="100" width="100" />
            </td>
            <td>
                <p class="card-text" title="@item.Description">
                <p class="card-text text-truncate" data-bs-toggle="tooltip" data-bs-placement="top" title="@item.Description">
                    @item.Description.Substring(0, Math.Min(item.Description.Length, 30))...
                </p>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.ActionLink("Edit", "EditProduct", new { id = item.ProductId }, new { @class = "btn btn-warning" }) |
                @Html.ActionLink("Details", "DetailsProduct", new { id = item.ProductId }, new { @class = "btn btn-info px-4" }) |
                @Html.ActionLink("Delete", "DeleteProduct", new { id = item.ProductId }, new { @class = "btn btn-danger px-4" })
            </td>

        </tr>
    }

</table>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    });
</script>
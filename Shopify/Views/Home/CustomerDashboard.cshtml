@model IEnumerable<ECommerce_Project.Models.Products>
@{
    ViewBag.Title = "CustomerDashboard";
}

@Html.Raw(TempData["LoginSuccessfullMessage"])
@Html.Raw(TempData["RegisterMessage"])
@Html.Raw(TempData["placeOrderMessage"])

<!-- Carousel -->
<div id="demo" class="carousel slide mt-3" data-bs-ride="carousel">

    <!-- Indicators/dots -->
    <div class="carousel-indicators">
        <button type="button" data-bs-target="#demo" data-bs-slide-to="0" class="active">1</button>
        <button type="button" data-bs-target="#demo" data-bs-slide-to="1">2</button>
        <button type="button" data-bs-target="#demo" data-bs-slide-to="2">3</button>
    </div>

    <!-- The slideshow/carousel -->
    <div class="carousel-inner">
        <div class="carousel-item active">
            <img src="~/Image/Slider_Images/slider1.jpg" alt="Shop1" class="d-block" style="width:100%">
        </div>
        <div class="carousel-item">
            <img src="~/Image/Slider_Images/slider2.jpg" alt="Shop2" class="d-block" style="width:100%">
        </div>
        <div class="carousel-item">
            <img src="~/Image/Slider_Images/slider3.jpg" alt="Shop3" class="d-block" style="width:100%">
        </div>
    </div>

    <!-- Left and right controls/icons -->
    <button class="carousel-control-prev" type="button" data-bs-target="#demo" data-bs-slide="prev">
        <span class="carousel-control-prev-icon"></span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#demo" data-bs-slide="next">
        <span class="carousel-control-next-icon"></span>
    </button>
</div>
@if (ViewBag.AddCartSuccess != null)
{
    <p class="alert alert-success mt-3">@ViewBag.AddCartSuccess</p>
}
<div class="container-fluid ">
    <div class="row ">

        @foreach (var item in Model)
        {
            <div class="col-12 col-sm-6 col-md-4 col-lg-3 d-flex mt-3">
                <div class="card h-100 d-flex flex-column position-relative"
                     onclick="navigateToProduct('@Url.Action("ProductDetails", "Product", new { id = item.ProductId })')">

                    <!-- Product Image -->
                    <img src="@Url.Content(item.ProductImage)" class="card-img-top img-fluid" alt="@item.ProductName"
                         style="max-height: 200px; object-fit: contain; padding: 10px;">

                    <!-- Category Badge -->
                    <span class="category-badge position-absolute top-0 start-0 m-2 p-2 rounded-pill text-primary bg-white fw-bold shadow">
                        @item.Category
                    </span>

                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title text-center">@item.ProductName</h5>

                        <!-- Truncated Description with Tooltip -->
                        <p class="card-text text-truncate" data-bs-toggle="tooltip" title="@item.Description">
                            @(item.Description.Length > 50 ? item.Description.Substring(0, 50) + "..." : item.Description)
                        </p>

                        <p class="card-text text-success fw-bold">₹@item.Price</p>
                        <p class="card-text text-muted">@item.Status</p>

                        <!-- Add to Cart Button -->
                        <a href="@Url.Action("AddToCart", "Cart", new { id = item.ProductId })"
                           class="btn btn-outline-primary mt-auto w-100 add-to-cart"
                           onclick="event.stopPropagation();" data-id="@item.ProductId">
                            <i class="fas fa-shopping-cart"></i> Add to Cart
                        </a>
                    </div>
                </div>
            </div>

        }

    </div>
</div>



<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Initialize Bootstrap Tooltip
        document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach(el => new bootstrap.Tooltip(el));

        // Add to Cart Click Event
        document.querySelectorAll(".add-to-cart").forEach(button => {
            button.addEventListener("click", function (event) {
                event.stopPropagation(); // Prevent card click event from triggering
                alert("Product " + this.dataset.id + " added to cart!");
                // Add AJAX call to update the cart in session or database
            });
        });
    });

    function navigateToProduct(url) {
        window.location.href = url;
    }
</script>

